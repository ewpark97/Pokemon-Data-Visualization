runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
scores <- list(
"Rich" = c(9, 7, 4, 5, 3, 7),
"Andy" = c(7, 6, 6, 2, 6, 9),
"Aimee" = c(6, 5, 8, 4, 7, 6)
)
View(scores)
source('~/Desktop/INFO 201/pokemon/test.R')
View(ds)
View(scores)
source('~/Desktop/INFO 201/pokemon/test.R')
View(select(ds, Name))
View(t(select(ds, Name)))
colnames(ds) <- t(select(ds, Name))
library(radarchart)
library(dplyr)
ds <- read.csv('Pokemon.csv')
ds <- t(ds)
colnames(ds) <- t(select(ds, Name))
library(radarchart)
library(dplyr)
ds <- read.csv('Pokemon.csv')
ds <- t(ds)
colnames(ds) <- select(ds, Name)
library(radarchart)
library(dplyr)
ds <- read.csv('Pokemon.csv')
ds <- t(ds)
df <- data.frame("Label" = ds[2,],
ds)
View(ds[2,])
df <- data.frame("Label" = ds[2,])
View(df)
df <- data.frame("Label" = t(ds[2,]))
colnames(ds) <- ds[2,]
source('~/Desktop/INFO 201/pokemon/test.R')
source('~/Desktop/INFO 201/pokemon/test.R')
View(ds)
View(scores)
library(radarchart)
library(dplyr)
ds <- read.csv('Pokemon.csv')
ds <- read.csv('Pokemon.csv')
colnames(ds) <- seq(1:13)
ds <- read.csv('Pokemon.csv')
colnames(ds) <- seq(1:13)
ds <- t(ds)
ds <- read.csv('Pokemon.csv')
colnames(ds) <- seq(1:13)
ds <- t(ds)
colnames(ds) <- ds[2,]
library(radarchart)
library(dplyr)
ds <- read.csv('Pokemon.csv')
colnames(ds) <- seq(1:13)
ds <- t(ds)
ds[2,]
View(ds[2,])
colnames(ds) <- ds[2,]
source('~/Desktop/INFO 201/pokemon/test.R')
View(ds)
View(scores)
source('~/Desktop/INFO 201/pokemon/test.R')
View(scores)
View(ds)
library(radarchart)
library(dplyr)
ds <- read.csv('Pokemon.csv')
colnames(ds) <- seq(1:13)
ds <- t(ds)
colnames(ds) <- ds[2,]
ds <- data.frame("Label"= c('ID', 'Name', 'Type 1', 'Type 2', 'Total',
'HP', 'Attack', 'Defense', 'Attack Speed',
'Defense Speed', 'Speed', 'Generation',
'Legendary'),
ds)
ds <- ds[-2,]
chartJSRadar(ds[6:11,], maxScale = 10, showToolTipLabel=TRUE)
View(ds[6:11,])
View(ds[6:11,2:3])
View(ds[6:11,1:3])
source('~/Desktop/INFO 201/pokemon/test.R')
chartJSRadar(ds[6:11,1:3])
chartJSRadar(ds[6:11,1:3])
chartJSRadar(ds[6:11,1:3])
chartJSRadar(ds[6:11,1:3],keep_vec_names=TRUE)
library(radarchart)
library(dplyr)
ds <- read.csv('Pokemon.csv')
colnames(ds) <- seq(1:13)
ds <- t(ds)
colnames(ds) <- ds[2,]
ds <- data.frame("Label"= c('ID', 'Name', 'Type 1', 'Type 2', 'Total',
'HP', 'Attack', 'Defense', 'Attack Speed',
'Defense Speed', 'Speed', 'Generation',
'Legendary'),
ds)
ds <- ds[-2,]
View(ds)
View(scores)
colnames(scores)
rownames(scores)
rownames(ds)
colnames(ds)
library(radarchart)
library(dplyr)
ds <- read.csv('Pokemon.csv')
ds <- ds[,c(2, 6:11)]
library(radarchart)
library(dplyr)
ds <- read.csv('Pokemon.csv')
ds <- ds[,c(2, 6:11)]
colnames(ds) <- seq(1:7)
ds <- t(ds)
colnames(ds) <- ds[1,]
View(ds)
View(ds[-1])
View(ds[-1,])
library(radarchart)
library(dplyr)
ds <- read.csv('Pokemon.csv')
ds <- ds[,c(2, 6:11)]
colnames(ds) <- seq(1:7)
ds <- t(ds)
colnames(ds) <- ds[1,]
View(ds)
library(radarchart)
library(dplyr)
ds <- read.csv('Pokemon.csv')
ds <- ds[,c(2, 6:11)]
colnames(ds) <- seq(1:7)
ds <- t(ds)
colnames(ds) <- ds[1,]
ds <- data.frame("Label"= c('HP', 'Attack', 'Defense', 'Attack Speed',
'Defense Speed', 'Speed'),
ds[-1,])
library(radarchart)
library(dplyr)
ds <- read.csv('Pokemon.csv')
ds <- ds[,c(2, 6:11)]
ds <- t(ds)
colnames(ds) <- ds[1,]
ds <- data.frame("Label"= c('HP', 'Attack', 'Defense', 'Attack Speed',
'Defense Speed', 'Speed'),
ds[-1,])
colnames(ds) <- seq(1:6)
View(ds)
View(scores)
source('~/Desktop/INFO 201/pokemon/test.R')
source('~/Desktop/INFO 201/pokemon/test.R')
chartJSRadar(ds[6:11,1:3],keep_vec_names=TRUE)
source('~/Desktop/INFO 201/pokemon/test.R')
chartJSRadar(scores, maxScale = 10, showToolTipLabel=TRUE)
chartJSRadar(ds, maxScale = 10, showToolTipLabel=TRUE)
chartJSRadar(ds, maxScale = 100, showToolTipLabel=TRUE)
library(radarchart)
library(dplyr)
ds <- read.csv('Pokemon.csv')
ds <- ds[,c(2, 6:11)]
ds <- t(ds)
colnames(ds) <- ds[1,]
ds <- data.frame("Label"= c('HP', 'Attack', 'Defense', 'Attack Speed',
'Defense Speed', 'Speed'),
ds[-1,])
rownames(ds) <- seq(1:6)
chartJSRadar(ds, maxScale = 100, showToolTipLabel=TRUE)
View(scores)
View(ds)
source('~/Desktop/INFO 201/pokemon/test.R')
View(ds)
View(scores)
library(radarchart)
library(dplyr)
ds <- read.csv('Pokemon.csv')
ds <- ds[,c(2, 6:11)]
ds <- t(ds)
colnames(ds) <- ds[1,]
View(ds)
ds <- data.frame("Label"= c('HP', 'Attack', 'Defense', 'Attack Speed',
'Defense Speed', 'Speed'),
ds[-1,])
rownames(ds) <- seq(1:6)
View(ds[,1:3])
chartJSRadar(ds[,1:3], maxScale = 100, showToolTipLabel=TRUE)
library(radarchart)
library(dplyr)
ds <- read.csv('Pokemon.csv')
scores <- data.frame("Label"=c("Communicator", "Data Wangler", "Programmer",
"Technologist",  "Modeller", "Visualizer"),
"Rich" = c(9, 7, 4, 5, 3, 7),
"Andy" = c(7, 6, 6, 2, 6, 9),
"Aimee" = c(6, 5, 8, 4, 7, 6))
View(ds)
View(scores)
ds[1,]
View(ds[1,6:11])
source('~/Desktop/INFO 201/pokemon/test.R')
ds <- data.frame("Label"= c('HP', 'Attack', 'Defense', 'Attack Speed',
'Defense Speed', 'Speed'),
'Bulbasaur' = ds[1,6:11],
'Pikachu' = ds[1,6:11]
)
View(ds)
ds <- data.frame("Label"= c('HP', 'Attack', 'Defense', 'Attack Speed',
'Defense Speed', 'Speed'),
'Bulbasaur' = t(ds[1,6:11]),
'Pikachu' = t(ds[1,6:11])
)
View(ds)
View(c(9, 7, 4, 5, 3, 7))
View(t(ds[1,6:11]))
library(radarchart)
library(dplyr)
ds <- read.csv('Pokemon.csv')
View(t(ds[1,6:11]))
library(radarchart)
library(dplyr)
ds <- read.csv('Pokemon.csv')
rownames(ds) <- c()
colnames(ds) <- c()
View(ds)
library(radarchart)
library(dplyr)
ds <- read.csv('Pokemon.csv')
View(c(9, 7, 4, 5, 3, 7))
View(ds[1,6:11])
View(t(ds[1,6:11]))
ds <- data.frame("Label"= c('HP', 'Attack', 'Defense', 'Attack Speed',
'Defense Speed', 'Speed'),
'Bulbasaur' = t(ds[1,6:11]),
'Pikachu' = t(ds[1,6:11])
)
chartJSRadar(ds, maxScale = 100, showToolTipLabel=TRUE)
source('~/Desktop/INFO 201/pokemon/test.R')
library(radarchart)
library(dplyr)
ds <- read.csv('Pokemon.csv')
ds <- data.frame("Label"= c('HP', 'Attack', 'Defense', 'Attack Speed',
'Defense Speed', 'Speed'),
'Bulbasaur' = t(ds[1,6:11]),
'Pikachu' = t(ds[2,6:11])
)
chartJSRadar(ds, maxScale = 100, showToolTipLabel=TRUE)
View(ds)
View(t(ds[1,6:11]))
View(scores)
ds <- read.csv('Pokemon.csv')
View(ds)
radarDF <- gather(radarDF, key=Label, value=Score, -Name) %>%
spread(key=Name, value=Score)
library(radarchart)
library(tidyr)
ds <- read.csv('Pokemon.csv')
radarDF <- ds %>% select(Name, 1:2) %>% as.data.frame()
View(radarDF)
library(radarchart)
library(tidyr)
ds <- read.csv('Pokemon.csv')
radarDF <- ds %>% select(Name, 6:11) %>% as.data.frame()
View(radarDF)
radarDF <- gather(radarDF, key=Label, value=Score, -Name) %>%
spread(key=Name, value=Score)
library(radarchart)
library(tidyr)
ds <- read.csv('Pokemon.csv')
install.packages(tidyr)
install.packages('tidyr')
library(radarchart)
library(tidyr)
ds <- read.csv('Pokemon.csv')
radarDF <- ds %>% select(Name, 6:11) %>% as.data.frame()
radarDF <- gather(radarDF, key=Label, value=Score, -Name) %>%
spread(key=Name, value=Score)
chartJSRadar(radarDF, maxScale = 100, showToolTipLabel=TRUE)
library(radarchart)
library(tidyr)
ds <- read.csv('Pokemon.csv')
#ds <- data.frame("Label"= c('HP', 'Attack', 'Defense', 'Attack Speed',
#                           'Defense Speed', 'Speed'),
#                 'Bulbasaur' = t(ds[1,6:11]),
#                 'Pikachu' = t(ds[2,6:11])
#                 )
radarDF <- ds %>% select(Name, 6:11) %>% as.data.frame()
View(radarDF)
View(radarDF[1:2,])
library(radarchart)
library(tidyr)
ds <- read.csv('Pokemon.csv')
#ds <- data.frame("Label"= c('HP', 'Attack', 'Defense', 'Attack Speed',
#                           'Defense Speed', 'Speed'),
#                 'Bulbasaur' = t(ds[1,6:11]),
#                 'Pikachu' = t(ds[2,6:11])
#                 )
radarDF <- ds %>% select(Name, 6:11) %>% as.data.frame()
radarDF <- gather(radarDF[1:2,], key=Label, value=Score, -Name) %>%
spread(key=Name, value=Score)
chartJSRadar(radarDF, maxScale = 100, showToolTipLabel=TRUE)
library(radarchart)
library(tidyr)
ds <- read.csv('Pokemon.csv')
radarDF <- ds %>% select(Name, 6:11) %>% as.data.frame()
radarDF <- gather(radarDF[1:2,], key=Label, value=Score, -Name) %>%
spread(key=Name, value=Score)
chartJSRadar(radarDF, maxScale = 100, showToolTipLabel=TRUE)
library(radarchart)
library(tidyr)
ds <- read.csv('Pokemon.csv')
colnames(ds) <- c('ID', 'Name', 'Type 1', 'Type 2', 'Total',
'HP', 'Attack', 'Defense', 'Attack Speed',
'Defense Speed', 'Speed', 'Generation',
'Legendary')
radarDF <- ds %>% select(Name, 6:11) %>% as.data.frame()
radarDF <- gather(radarDF[1:2,], key=Label, value=Score, -Name) %>%
spread(key=Name, value=Score)
chartJSRadar(radarDF, maxScale = 100, showToolTipLabel=TRUE)
library(radarchart)
library(tidyr)
ds <- read.csv('Pokemon.csv')
colnames(ds) <- c('ID', 'Name', 'Type 1', 'Type 2', 'Total',
'HP', 'Attack', 'Defense', 'Attack Speed',
'Defense Speed', 'Speed', 'Generation',
'Legendary')
radarDF <- ds %>% select(Name, 6:11) %>% as.data.frame()
radarDF <- gather(radarDF[1:2,], key=Label, value=Score, -Name) %>%
spread(key=Name, value=Score)
chartJSRadar(radarDF, maxScale = 100, showToolTipLabel=TRUE)
library(radarchart)
library(tidyr)
ds <- read.csv('Pokemon.csv')
colnames(ds) <- c('ID', 'Name', 'Type 1', 'Type 2', 'Total',
'HP', 'Attack', 'Defense', 'Attack Speed',
'Defense Speed', 'Speed', 'Generation',
'Legendary')
radarDF <- ds %>% select(Name, 6:11) %>% as.data.frame()
radarDF <- gather(radarDF[1:2,], key=Label, value=Score, -Name) %>%
spread(key=Name, value=Score)
chartJSRadar(radarDF, maxScale = 100, showToolTipLabel=TRUE)
library(radarchart)
library(tidyr)
ds <- read.csv('Pokemon.csv')
colnames(ds) <- c('ID', 'Name', 'Type 1', 'Type 2', 'Total',
'HP', 'Attack', 'Defense', 'Attack Speed',
'Defense Speed', 'Speed', 'Generation',
'Legendary')
radarDF <- ds %>% select(Name, 6:11) %>% as.data.frame()
radarDF <- gather(radarDF[1:2,], key=Label, value=Score, -Name) %>%
spread(key=Name, value=Score)
chartJSRadar(radarDF, maxScale = 100, showToolTipLabel=TRUE)
source('~/Desktop/INFO 201/pokemon/test.R')
source('~/Desktop/INFO 201/pokemon/test.R')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# This is a demo app to test a key binding on an actionButton
# Uncommenting the info item (on both UI and server) will display internal stuff
runApp(
list(
#############################################
# UI
#############################################
ui = bootstrapPage(
textInput ("myinput", label = "Write something here"),
tags$script('
$(document).on("keydown", function (e) {
Shiny.onInputChange("lastkeypresscode", e.keyCode);
});
'),
actionButton("GO", "Lancer le matching !"),
# verbatimTextOutput("info"),
verbatimTextOutput("results")
),
#############################################
# SERVER
#############################################
server = function(input, output, session) {
# There are state variables for the input text and GO button
curr.val <- "" # Corresponds to the current displayed input$myinput
curr.go  <- 0  # Corresponds to the last known GO value (integer)
lastEvent <- reactive({
# Is reactive to the following events
input$GO
input$lastkeypresscode
# Decide which action should be taken
if(input$GO > curr.go) {
# The user pushed the GO actionButton, so take action
action <- 1
curr.go <<- input$GO
} else if(input$lastkeypresscode == 13) {
# The user pressed the Enter key, so take action
action <- 1
} else {
# The user did anything else, so do nothing
action <- 0
}
return(action)
})
output$results = renderPrint({
if(lastEvent() == 1) {
curr.val <<- isolate(input$myinput)
}
curr.val
})
# output$info = renderText({
#   paste(curr.val, curr.go, input$lastkeypresscode, sep = ", ")
# })
}
)
)
# This is a demo app to test a key binding on an actionButton
# Uncommenting the info item (on both UI and server) will display internal stuff
runApp(
list(
#############################################
# UI
#############################################
ui = bootstrapPage(
textInput ("myinput", label = "Write something here"),
tags$script('
$(document).on("keydown", function (e) {
Shiny.onInputChange("lastkeypresscode", e.keyCode);
});
'),
actionButton("GO", "Lancer le matching !"),
# verbatimTextOutput("info"),
verbatimTextOutput("results")
),
#############################################
# SERVER
#############################################
server = function(input, output, session) {
# There are state variables for the input text and GO button
curr.val <- "" # Corresponds to the current displayed input$myinput
curr.go  <- 0  # Corresponds to the last known GO value (integer)
lastEvent <- reactive({
# Is reactive to the following events
input$GO
input$lastkeypresscode
# Decide which action should be taken
if(input$GO > curr.go) {
# The user pushed the GO actionButton, so take action
action <- 1
curr.go <<- input$GO
} else if(input$lastkeypresscode == 13) {
# The user pressed the Enter key, so take action
action <- 1
} else {
# The user did anything else, so do nothing
action <- 0
}
return(action)
})
output$results = renderPrint({
if(lastEvent() == 1) {
curr.val <<- isolate(input$myinput)
}
curr.val
})
# output$info = renderText({
#   paste(curr.val, curr.go, input$lastkeypresscode, sep = ", ")
# })
}
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
